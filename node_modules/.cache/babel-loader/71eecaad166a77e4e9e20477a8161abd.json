{"ast":null,"code":"var _jsxFileName = \"/home/webelight-047/Desktop/Soha/React-Training/React/textutil/src/components/About.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function About() {\n  _s();\n\n  const [myStyle, setMyStyle] = useState({\n    color: \"black\",\n    backgroundColor: \"white\"\n  });\n  const [buttonText, setBtnText] = useState(\"Enable dark mode\");\n\n  const toggleStyle = () => {\n    if (myStyle.color == \"black\") {\n      setMyStyle({\n        color: \"white\",\n        backgroundColor: \"black\",\n        border: \"1px solid white\"\n      });\n      setBtnText(\"Enable light mode\");\n    } else {\n      setMyStyle({\n        color: \"black\",\n        backgroundColor: \"white\",\n        border: \"1px solid black\"\n      });\n      setBtnText(\"Enable dark mode\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: myStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"container my-3\",\n      children: \"ABOUT US\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordion accordion-flush\",\n      id: \"accordionFlushExample\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"accordion-header\",\n          id: \"flush-headingOne\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"accordion-button collapsed\",\n            style: myStyle,\n            type: \"button\",\n            \"data-bs-toggle\": \"collapse\",\n            \"data-bs-target\": \"#flush-collapseOne\",\n            \"aria-expanded\": \"false\",\n            \"aria-controls\": \"flush-collapseOne\",\n            children: \"Accordion Item #1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"flush-collapseOne\",\n          className: \"accordion-collapse collapse\",\n          \"aria-labelledby\": \"flush-headingOne\",\n          \"data-bs-parent\": \"#accordionFlushExample\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accordion-body\",\n            style: myStyle,\n            children: [\"Placeholder content for this accordion, which is intended to demonstrate the\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \".accordion-flush\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), \" class. This is the first item's accordion body.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"accordion-header\",\n          id: \"flush-headingTwo\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"accordion-button collapsed\",\n            style: myStyle,\n            type: \"button\",\n            \"data-bs-toggle\": \"collapse\",\n            \"data-bs-target\": \"#flush-collapseTwo\",\n            \"aria-expanded\": \"false\",\n            \"aria-controls\": \"flush-collapseTwo\",\n            children: \"Accordion Item #2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"flush-collapseTwo\",\n          className: \"accordion-collapse collapse\",\n          \"aria-labelledby\": \"flush-headingTwo\",\n          \"data-bs-parent\": \"#accordionFlushExample\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accordion-body\",\n            style: myStyle,\n            children: [\"Placeholder content for this accordion, which is intended to demonstrate the\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \".accordion-flush\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), \" class. This is the second item's accordion body. Let's imagine this being filled with some actual content.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"accordion-header\",\n          id: \"flush-headingThree\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"accordion-button collapsed\",\n            style: myStyle,\n            type: \"button\",\n            \"data-bs-toggle\": \"collapse\",\n            \"data-bs-target\": \"#flush-collapseThree\",\n            \"aria-expanded\": \"false\",\n            \"aria-controls\": \"flush-collapseThree\",\n            children: \"Accordion Item #3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"flush-collapseThree\",\n          className: \"accordion-collapse collapse\",\n          \"aria-labelledby\": \"flush-headingThree\",\n          \"data-bs-parent\": \"#accordionFlushExample\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accordion-body\",\n            style: myStyle,\n            children: [\"Placeholder content for this accordion, which is intended to demonstrate the\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \".accordion-flush\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), \" class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleStyle,\n        type: \"button\",\n        className: \"btn btn-primary\",\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(About, \"Q0F0Z0GDXlH7CJkolwSfjkfzSKA=\");\n\n_c = About;\n\nvar _c;\n\n$RefreshReg$(_c, \"About\");","map":{"version":3,"sources":["/home/webelight-047/Desktop/Soha/React-Training/React/textutil/src/components/About.js"],"names":["React","useState","About","myStyle","setMyStyle","color","backgroundColor","buttonText","setBtnText","toggleStyle","border"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\n\nexport default function About() {\n    const [myStyle, setMyStyle] = useState({\n        color: \"black\",\n        backgroundColor: \"white\",\n    })\n    const [buttonText, setBtnText] = useState(\"Enable dark mode\")\n\n    const toggleStyle = () => {\n        if (myStyle.color == \"black\") {\n            setMyStyle({\n                color: \"white\",\n                backgroundColor: \"black\",\n                border: \"1px solid white\",\n            })\n            setBtnText(\"Enable light mode\")\n        } else {\n            setMyStyle({\n                color: \"black\",\n                backgroundColor: \"white\",\n                border: \"1px solid black\",\n            })\n            setBtnText(\"Enable dark mode\")\n        }\n    }\n\n    return (\n        <div className=\"container\" style={myStyle}>\n            <h1 className=\"container my-3\">ABOUT US</h1>\n            <div\n                className=\"accordion accordion-flush\"\n                id=\"accordionFlushExample\"\n            >\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"flush-headingOne\">\n                        <button\n                            className=\"accordion-button collapsed\"\n                            style={myStyle}\n                            type=\"button\"\n                            data-bs-toggle=\"collapse\"\n                            data-bs-target=\"#flush-collapseOne\"\n                            aria-expanded=\"false\"\n                            aria-controls=\"flush-collapseOne\"\n                        >\n                            Accordion Item #1\n                        </button>\n                    </h2>\n                    <div\n                        id=\"flush-collapseOne\"\n                        className=\"accordion-collapse collapse\"\n                        aria-labelledby=\"flush-headingOne\"\n                        data-bs-parent=\"#accordionFlushExample\"\n                    >\n                        <div className=\"accordion-body\" style={myStyle}>\n                            Placeholder content for this accordion, which is\n                            intended to demonstrate the{\" \"}\n                            <code>.accordion-flush</code> class. This is the\n                            first item's accordion body.\n                        </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"flush-headingTwo\">\n                        <button\n                            className=\"accordion-button collapsed\"\n                            style={myStyle}\n                            type=\"button\"\n                            data-bs-toggle=\"collapse\"\n                            data-bs-target=\"#flush-collapseTwo\"\n                            aria-expanded=\"false\"\n                            aria-controls=\"flush-collapseTwo\"\n                        >\n                            Accordion Item #2\n                        </button>\n                    </h2>\n                    <div\n                        id=\"flush-collapseTwo\"\n                        className=\"accordion-collapse collapse\"\n                        aria-labelledby=\"flush-headingTwo\"\n                        data-bs-parent=\"#accordionFlushExample\"\n                    >\n                        <div className=\"accordion-body\" style={myStyle}>\n                            Placeholder content for this accordion, which is\n                            intended to demonstrate the{\" \"}\n                            <code>.accordion-flush</code> class. This is the\n                            second item's accordion body. Let's imagine this\n                            being filled with some actual content.\n                        </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"flush-headingThree\">\n                        <button\n                            className=\"accordion-button collapsed\"\n                            style={myStyle}\n                            type=\"button\"\n                            data-bs-toggle=\"collapse\"\n                            data-bs-target=\"#flush-collapseThree\"\n                            aria-expanded=\"false\"\n                            aria-controls=\"flush-collapseThree\"\n                        >\n                            Accordion Item #3\n                        </button>\n                    </h2>\n                    <div\n                        id=\"flush-collapseThree\"\n                        className=\"accordion-collapse collapse\"\n                        aria-labelledby=\"flush-headingThree\"\n                        data-bs-parent=\"#accordionFlushExample\"\n                    >\n                        <div className=\"accordion-body\" style={myStyle}>\n                            Placeholder content for this accordion, which is\n                            intended to demonstrate the{\" \"}\n                            <code>.accordion-flush</code> class. This is the\n                            third item's accordion body. Nothing more exciting\n                            happening here in terms of content, but just filling\n                            up the space to make it look, at least at first\n                            glance, a bit more representative of how this would\n                            look in a real-world application.\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"container my-3\">\n                <button\n                    onClick={toggleStyle}\n                    type=\"button\"\n                    className=\"btn btn-primary\"\n                >\n                    {buttonText}\n                </button>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}