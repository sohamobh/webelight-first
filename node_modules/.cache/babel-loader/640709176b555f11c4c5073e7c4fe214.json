{"ast":null,"code":"var _jsxFileName = \"/home/webelight-047/Desktop/Soha/React-Training/React/textutil/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\"; //new project.. text management\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState(\"light\"); //whether darkmode is enabled or not\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    //type is the type of Alert amongst warning, success, danger and Alert\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const togglemode = () => {\n    if (mode === \"light\") {\n      setMode(\"blue\");\n      document.body.style.color = \"white\";\n      document.body.style.backgroundColor = \"#4169e1\";\n      showAlert(\" Blue mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.color = \"black\";\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\" Light mode has been enabled\", \"success\"); //you cannot capitalize here to get desired output\n    }\n  }; // const togglemode = () => {\n  //     if (mode === \"light\") {\n  //         setMode(\"dark\")\n  //         document.body.style.color = \"white\"\n  //         document.body.style.backgroundColor = \"#212529\"\n  //         showAlert(\" Dark mode has been enabled\", \"success\")\n  //         document.title = \"TextUtils | Dark mode\"\n  //         setInterval(() => {\n  //             document.title = \"TextUtils is amazing!!\"\n  //         }, 2000)\n  //         setInterval(() => {\n  //             document.title = \"Install TextUtils now!!\"\n  //         }, 1500)\n  //     } else {\n  //         setMode(\"light\")\n  //         document.body.style.color = \"black\"\n  //         document.body.style.backgroundColor = \"white\"\n  //         showAlert(\" Light mode has been enabled\", \"success\")\n  //         document.title = \"TextUtils | Light mode\"\n  //         setInterval(() => {\n  //             document.title = \"TextUtils is amazing!!\"\n  //         }, 2000)\n  //         setInterval(() => {\n  //             document.title = \"Install TextUtils now!!\"\n  //         }, 1500)\n  //     }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        mode: mode,\n        togglemode: togglemode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true //finds the exact matching path\n            ,\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(TextForm, {\n              showAlert: showAlert,\n              heading: \"Enter the text to manipulate\",\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"0HOcw1k7gBoZtgDKz+uDOLkRLtw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/webelight-047/Desktop/Soha/React-Training/React/textutil/src/App.js"],"names":["BrowserRouter","Router","Routes","Route","Link","logo","Navbar","TextForm","About","useState","Alert","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","togglemode","document","body","style","color","backgroundColor"],"mappings":"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","sourcesContent":["import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\"\nimport logo from \"./logo.svg\"\nimport \"./App.css\"\nimport Navbar from \"./components/Navbar\"\nimport TextForm from \"./components/TextForm\"\nimport About from \"./components/About\"\nimport { useState } from \"react\"\nimport Alert from \"./components/Alert\"\n\n//new project.. text management\nfunction App() {\n    const [mode, setMode] = useState(\"light\") //whether darkmode is enabled or not\n    const [alert, setAlert] = useState(null)\n\n    const showAlert = (message, type) => {\n        //type is the type of Alert amongst warning, success, danger and Alert\n        setAlert({ msg: message, type: type })\n        setTimeout(() => {\n            setAlert(null)\n        }, 1500)\n    }\n    const togglemode = () => {\n        if (mode === \"light\") {\n            setMode(\"blue\")\n            document.body.style.color = \"white\"\n            document.body.style.backgroundColor = \"#4169e1\"\n            showAlert(\" Blue mode has been enabled\", \"success\")\n        } else {\n            setMode(\"light\")\n            document.body.style.color = \"black\"\n            document.body.style.backgroundColor = \"white\"\n            showAlert(\" Light mode has been enabled\", \"success\") //you cannot capitalize here to get desired output\n        }\n    }\n    // const togglemode = () => {\n    //     if (mode === \"light\") {\n    //         setMode(\"dark\")\n    //         document.body.style.color = \"white\"\n    //         document.body.style.backgroundColor = \"#212529\"\n    //         showAlert(\" Dark mode has been enabled\", \"success\")\n    //         document.title = \"TextUtils | Dark mode\"\n    //         setInterval(() => {\n    //             document.title = \"TextUtils is amazing!!\"\n    //         }, 2000)\n    //         setInterval(() => {\n    //             document.title = \"Install TextUtils now!!\"\n    //         }, 1500)\n    //     } else {\n    //         setMode(\"light\")\n    //         document.body.style.color = \"black\"\n    //         document.body.style.backgroundColor = \"white\"\n    //         showAlert(\" Light mode has been enabled\", \"success\")\n    //         document.title = \"TextUtils | Light mode\"\n    //         setInterval(() => {\n    //             document.title = \"TextUtils is amazing!!\"\n    //         }, 2000)\n    //         setInterval(() => {\n    //             document.title = \"Install TextUtils now!!\"\n    //         }, 1500)\n    //     }\n    // }\n    return (\n        <>\n            <Router>\n                <Navbar\n                    title=\"TextUtils\"\n                    mode={mode}\n                    togglemode={togglemode}\n                ></Navbar>\n                <Alert alert={alert}></Alert>\n                <div className=\"container my-3\">\n                    <Routes>\n                        <Route exact path=\"/about\" element={<About />} />\n                        <Route\n                            exact //finds the exact matching path\n                            path=\"/\"\n                            element={\n                                <TextForm\n                                    showAlert={showAlert}\n                                    heading=\"Enter the text to manipulate\"\n                                    mode={mode}\n                                ></TextForm>\n                            }\n                        ></Route>\n                    </Routes>\n                </div>\n            </Router>\n        </>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}