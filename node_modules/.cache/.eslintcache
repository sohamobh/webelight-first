[{"/home/webelight-047/Desktop/Soha/React-Training/React/textutil/src/index.js":"1","/home/webelight-047/Desktop/Soha/React-Training/React/textutil/src/App.js":"2","/home/webelight-047/Desktop/Soha/React-Training/React/textutil/src/reportWebVitals.js":"3","/home/webelight-047/Desktop/Soha/React-Training/React/textutil/src/components/Navbar.js":"4","/home/webelight-047/Desktop/Soha/React-Training/React/textutil/src/components/TextForm.js":"5","/home/webelight-047/Desktop/Soha/React-Training/React/textutil/src/components/About.js":"6"},{"size":500,"mtime":1646733572766,"results":"7","hashOfConfig":"8"},{"size":1088,"mtime":1646831635119,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1646733572766,"results":"10","hashOfConfig":"8"},{"size":3428,"mtime":1646831171923,"results":"11","hashOfConfig":"8"},{"size":3576,"mtime":1646826590680,"results":"12","hashOfConfig":"8"},{"size":5895,"mtime":1646830547728,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1ko1z6v",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"17"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/webelight-047/Desktop/Soha/React-Training/React/textutil/src/index.js",[],[],["34","35"],"/home/webelight-047/Desktop/Soha/React-Training/React/textutil/src/App.js",["36"],[],"/home/webelight-047/Desktop/Soha/React-Training/React/textutil/src/reportWebVitals.js",[],[],"/home/webelight-047/Desktop/Soha/React-Training/React/textutil/src/components/Navbar.js",[],[],"/home/webelight-047/Desktop/Soha/React-Training/React/textutil/src/components/TextForm.js",["37"],[],"import React, { useState } from \"react\"\n\n// console.log(useState('Enter text here2'));\n\nexport default function TextForm(props) {\n    const handleUpClick = () => {\n        // console.log(\"Uppercase was clicked\" + text)\n        let newText = text.toUpperCase()\n        setText(newText)\n    }\n    const handleLowClick = () => {\n        // console.log(\"Lowercase was clicked\" + text)\n        let newText = text.toLowerCase()\n        setText(newText)\n    }\n    const handleCopy = () => {\n        var text = document.getElementById(\"MyBox\")\n        text.select()\n        navigator.clipboard.writeText(text.value)\n    }\n    const handleExtraSpaces = () => {\n        let newText = text.split(/[ ]+/)\n        setText(newText.join(\" \"))\n    }\n    const handleClearText = () => {\n        // console.log(\"Clear was clicked\" + text)\n        let newText = \"\"\n        setText(newText)\n    }\n    const handleOnChange = (event) => {\n        // console.log(\"On change\")\n        setText(event.target.value)\n    }\n    var num = 0\n\n    const [text, setText] = useState(\"\") //setText is the update function\n    // text=\"new text\"; //wrong way\n    // setText(\"New text\"); //correct way\n    return (\n        <>\n            <div className=\"container\">\n                <h1>{props.heading}</h1>\n                <div className=\"my-3\">\n                    {/* <label for=\"MyBox\" className=\"form-label\">Example textarea</label> */}\n                    <textarea\n                        className=\"form-control\"\n                        value={text}\n                        onChange={handleOnChange}\n                        id=\"MyBox\"\n                        rows=\"8\"\n                    ></textarea>\n                </div>\n                <button\n                    className=\"btn btn-primary mx-1\"\n                    onClick={handleUpClick}\n                >\n                    Convert to Uppercase\n                </button>\n                <button\n                    className=\"btn btn-primary mx-1\" //mx-1 creates space between 2 components; here, buttons\n                    onClick={handleLowClick}\n                >\n                    Convert to Lowercase\n                </button>\n                <button\n                    className=\"btn btn-primary mx-1\" //mx-1 creates space between 2 components; here, buttons\n                    onClick={handleCopy}\n                >\n                    Copy Text\n                </button>\n                <button\n                    className=\"btn btn-primary mx-1\" //mx-1 creates space between 2 components; here, buttons\n                    onClick={handleExtraSpaces}\n                >\n                    Handle Extra Spaces\n                </button>\n                <button\n                    className=\"btn btn-primary mx-1\" //mx-1 creates space between 2 components; here, buttons\n                    onClick={handleClearText}\n                >\n                    Clear text\n                </button>\n            </div>\n            <div className=\"container my-3\">\n                <h2>Your text summary</h2>\n                <p>\n                    {text.split(\" \").length} words and {text.length} characters\n                    {/*number count*/}\n                </p>\n                <p>\n                    {0.008 * text.split(\" \").length} minutes reading time.\n                    {/*1 word = 0.008 minutes(1/125) multiplied by length*/}\n                </p>\n                <p> Total numbers of sentences are {text.split(\".\").length}</p>\n\n                <h3>Preview</h3>\n                <p>{text}</p>\n            </div>\n        </>\n    )\n}\n","/home/webelight-047/Desktop/Soha/React-Training/React/textutil/src/components/About.js",["38"],[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":8,"nodeType":"45","messageId":"46","endLine":1,"endColumn":12},{"ruleId":"43","severity":1,"message":"47","line":34,"column":9,"nodeType":"45","messageId":"46","endLine":34,"endColumn":12},{"ruleId":"48","severity":1,"message":"49","line":11,"column":27,"nodeType":"50","messageId":"51","endLine":11,"endColumn":29},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'num' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]